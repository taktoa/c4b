{ T }
n = 100;
{ -n + 100 ≤ 0 /\ n - 100 ≤ 0 }
m = 1;
{ -m + 1 ≤ 0 /\ m - 1 ≤ 0 /\ -n + 100 ≤ 0 /\ n - 100 ≤ 0 }
assert n > 0;
{ -n + 1 ≤ 0 /\ -m + 1 ≤ 0 /\ m - 1 ≤ 0 /\ -n + 100 ≤ 0 /\ n - 100 ≤ 0 }
assert m > 0;
{ -m + 1 ≤ 0 /\ -n + 1 ≤ 0 /\ -m + 1 ≤ 0 /\ m - 1 ≤ 0 /\ -n + 100 ≤ 0 /\ n - 100 ≤ 0 }
va = n;
{ n - va ≤ 0 /\ -n + va ≤ 0 /\ -m + 1 ≤ 0 /\ -n + 1 ≤ 0 /\ -m + 1 ≤ 0 /\ m - 1 ≤ 0 /\ -n + 100 ≤ 0 /\ n - 100 ≤ 0 }
vb = 0;
loop
  (
{ n - 100 ≤ 0 /\ -n + 100 ≤ 0 /\ m - 1 ≤ 0 /\ -m + 1 ≤ 0 /\ -n + 1 ≤ 0 /\ -m + 1 ≤ 0 /\ -n + va ≤ 0 /\ -vb ≤ 0 }
    if va <= 0
{ va ≤ 0 /\ n - 100 ≤ 0 /\ -n + 100 ≤ 0 /\ m - 1 ≤ 0 /\ -m + 1 ≤ 0 /\ -n + 1 ≤ 0 /\ -m + 1 ≤ 0 /\ -n + va ≤ 0 /\ -vb ≤ 0 }
      break;
    if vb < m
      (
{ -m + vb + 1 ≤ 0 /\ -vb ≤ 0 /\ -n + va ≤ 0 /\ -m + 1 ≤ 0 /\ m - 1 ≤ 0 /\ -n + 100 ≤ 0 /\ n - 100 ≤ 0 /\ -va + 1 ≤ 0 }
        vb += 1;
        va -= 1
{ -m + vb ≤ 0 /\ -vb + 1 ≤ 0 /\ -n + va + 1 ≤ 0 /\ -m + 1 ≤ 0 /\ m - 1 ≤ 0 /\ -n + 100 ≤ 0 /\ n - 100 ≤ 0 /\ -va ≤ 0 }
      )
    else
      (
{ m - vb ≤ 0 /\ -vb ≤ 0 /\ -n + va ≤ 0 /\ -m + 1 ≤ 0 /\ m - 1 ≤ 0 /\ -n + 100 ≤ 0 /\ n - 100 ≤ 0 /\ -va + 1 ≤ 0 }
        vb -= 1;
        vb = 0
{ -vb ≤ 0 /\ vb ≤ 0 /\ -?6 + m - 1 ≤ 0 /\ -?6 - 1 ≤ 0 /\ -n + va ≤ 0 /\ -m + 1 ≤ 0 /\ m - 1 ≤ 0 /\ -n + 100 ≤ 0 /\ n - 100 ≤ 0 /\ -va + 1 ≤ 0 }
      )
{ -n + va ≤ 0 /\ -vb ≤ 0 /\ -m + vb ≤ 0 /\ -m + 1 ≤ 0 /\ m - 1 ≤ 0 /\ -n + 100 ≤ 0 /\ n - 100 ≤ 0 /\ -va ≤ 0 }
  )
{ -vb ≤ 0 /\ -m + 1 ≤ 0 /\ m - 1 ≤ 0 /\ -n + 100 ≤ 0 /\ n - 100 ≤ 0 /\ va ≤ 0 }
