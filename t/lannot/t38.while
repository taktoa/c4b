func count_down(x', y') local (a')
  (
{ T }
    a' = x';
    if a' > y'
      (
{ -a' + y' + 1 ≤ 0 /\ -a' + x' ≤ 0 /\ a' - x' ≤ 0 }
        a' -= 1;
        count_down(a', y')
{ -a' + y' ≤ 0 /\ -a' + x' - 1 ≤ 0 /\ a' - x' + 1 ≤ 0 }
      )
{ a' - x' ≤ 0 /\ -a' + x' - 1 ≤ 0 }
  );
func copy(x'', y'') local (t)
{ T }
  if x'' > 0
    (
{ -x'' + 1 ≤ 0 }
      y'' += 1;
{ -x'' + 1 ≤ 0 }
      x'' -= 1;
{ -x'' ≤ 0 }
      t = copy(x'', y'');
      return t
{ 1 ≤ 0 }
    )
  else
{ x'' ≤ 0 }
    return y'';

{ T }
y = copy(x, x);
{ T }
count_down(y, z);
{ T }
a = copy(b, b);
count_down(c, b)
{ T }
